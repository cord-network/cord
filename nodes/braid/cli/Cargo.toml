[package]
name = 'cord-braid-node-cli'
version.workspace = true
authors.workspace = true
build = 'build.rs'
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
publish = false

[lints]
workspace = true

[package.metadata.wasm-pack.profile.release]
# `wasm-opt` has some problems on linux, see
# https://github.com/rustwasm/wasm-pack/issues/781 etc.
wasm-opt = false

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[badges]
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "dhiway/cord" }
is-it-maintained-open-issues = { repository = "dhiway/cord" }

[[bin]]
name = "braid"
path = "bin/main.rs"
required-features = ["cli"]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
# third-party dependencies
array-bytes = { workspace = true }
clap = { features = ["derive"], optional = true, workspace = true }
codec = { workspace = true }
serde = { features = ["derive"], workspace = true }
jsonrpsee = { features = ["server"], workspace = true }
futures = { workspace = true }
log = { workspace = true }
hex = { workspace = true }
toml = { workspace = true }
kvdb = { workspace = true }
kvdb-rocksdb = { workspace = true, optional = true }
parity-db = { workspace = true, optional = true }

# Substrate primitives
sp-authority-discovery = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-consensus-grandpa = { workspace = true }
sp-api = { workspace = true }
sp-core = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-genesis-builder = { workspace = true }
sp-inherents = { workspace = true }
sp-keyring = { workspace = true }
sp-keystore = { workspace = true }
sp-consensus = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
sp-io = { workspace = true }
sp-blockchain = { workspace = true }
sp-std = { workspace = true }

# Substrate Client dependencies
sc-client-api = { workspace = true }
sc-chain-spec = { workspace = true }
sc-consensus = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-network-sync = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-grandpa = { workspace = true }
sc-rpc = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-executor = { workspace = true }
sc-authority-discovery = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sc-sysinfo = { workspace = true }
sc-storage-monitor = { workspace = true }
sc-offchain = { workspace = true }
sc-keystore = { workspace = true }

# frame dependencies
frame-benchmarking = { workspace = true }
frame-metadata-hash-extension = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-im-online = { workspace = true }

# cord-specific dependencies
cord-braid-runtime = { workspace = true, features = ["std"] }
cord-runtime-common = { workspace = true }
cord-primitives = { workspace = true }
network-membership = { workspace = true }
cord-braid-node-inspect = { workspace = true }
cord-braid-node-rpc = { workspace = true }
cord-braid-runtime-constants = { workspace = true }
pallet-network-membership = { workspace = true }

# CLI-specific dependencies
sc-cli = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
sc-keystore = { workspace = true }
sc-client-db = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-epochs = { workspace = true }
cord-braid-service-test = { workspace = true }
sp-tracing = { workspace = true }
sp-blockchain = { workspace = true }
sp-crypto-hashing = { workspace = true }
futures = { workspace = true }
tempfile = { workspace = true }
assert_cmd = { workspace = true }
nix = { features = ["signal"], workspace = true }
regex = { workspace = true }
soketto = { workspace = true }
tokio = { features = ["macros", "parking_lot", "time"], workspace = true }
tokio-util = { features = ["compat"], workspace = true }
cord-braid-cli-test-utils = { workspace = true }
frame-support = { workspace = true }
cord-braid-node-testing = { workspace = true }
pallet-balances = { workspace = true }
sp-application-crypto = { workspace = true }
pallet-root-testing = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-externalities = { workspace = true }
sp-keyring = { workspace = true }
sp-runtime = { workspace = true }
serde_json = { workspace = true }
scale-info = { features = ["derive", "serde"], workspace = true }
sp-trie = { workspace = true }
sp-state-machine = { workspace = true }

[build-dependencies]
clap = { workspace = true, optional = true }
clap_complete = { workspace = true, optional = true }
cord-braid-node-inspect = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true, optional = true }
substrate-build-script-utils = { workspace = true, optional = true }
sc-cli = { workspace = true, optional = true }
pallet-balances = { workspace = true }
sc-storage-monitor = { workspace = true }

[features]
default = ["cli", "rocksdb"]
cli = [
	"cord-braid-node-inspect",
	"sc-cli",
	"frame-benchmarking-cli",
	"sc-service/rocksdb",
	"clap",
	"clap_complete",
	"substrate-build-script-utils",
]
rocksdb = ["sc-client-db/rocksdb"]

runtime-benchmarks = [
	"cord-braid-runtime/runtime-benchmarks",
	"frame-benchmarking-cli/runtime-benchmarks",
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"cord-braid-node-inspect?/runtime-benchmarks",
	"pallet-balances/runtime-benchmarks",
	"pallet-im-online/runtime-benchmarks",
	"sc-service/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
]
# Enable features that allow the runtime to be tried and debugged.
try-runtime = [
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"cord-braid-runtime/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-im-online/try-runtime",
	"pallet-root-testing/try-runtime",
	"sp-runtime/try-runtime",
	"cord-braid-cli-test-utils/try-runtime",
]
