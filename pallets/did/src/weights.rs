// This file is part of CORD – https://cord.network

// Copyright (C) Dhiway Networks Pvt. Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later

// CORD is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// CORD is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with CORD. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_did
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-28, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `rohits-iMac`, CPU: `<UNKNOWN>`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/cord
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_did
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./pallets/did/src/weights.rs
// --header=./HEADER-GPL3
// --template=./.maintain/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_did.
pub trait WeightInfo {
	fn create_ed25519_keys(n: u32, c: u32, ) -> Weight;
	fn create_sr25519_keys(n: u32, c: u32, ) -> Weight;
	fn create_ecdsa_keys(n: u32, c: u32, ) -> Weight;
	fn delete(c: u32, ) -> Weight;
	fn submit_did_call_ed25519_key() -> Weight;
	fn submit_did_call_sr25519_key() -> Weight;
	fn submit_did_call_ecdsa_key() -> Weight;
	fn set_ed25519_authentication_key() -> Weight;
	fn set_sr25519_authentication_key() -> Weight;
	fn set_ecdsa_authentication_key() -> Weight;
	fn set_ed25519_delegation_key() -> Weight;
	fn set_sr25519_delegation_key() -> Weight;
	fn set_ecdsa_delegation_key() -> Weight;
	fn remove_ed25519_delegation_key() -> Weight;
	fn remove_sr25519_delegation_key() -> Weight;
	fn remove_ecdsa_delegation_key() -> Weight;
	fn set_ed25519_assertion_key() -> Weight;
	fn set_sr25519_assertion_key() -> Weight;
	fn set_ecdsa_assertion_key() -> Weight;
	fn remove_ed25519_assertion_key() -> Weight;
	fn remove_sr25519_assertion_key() -> Weight;
	fn remove_ecdsa_assertion_key() -> Weight;
	fn add_ed25519_key_agreement_key() -> Weight;
	fn add_sr25519_key_agreement_key() -> Weight;
	fn add_ecdsa_key_agreement_key() -> Weight;
	fn remove_ed25519_key_agreement_key() -> Weight;
	fn remove_sr25519_key_agreement_key() -> Weight;
	fn remove_ecdsa_key_agreement_key() -> Weight;
	fn add_service_endpoint() -> Weight;
	fn remove_service_endpoint() -> Weight;
	fn signature_verification_sr25519(l: u32, ) -> Weight;
	fn signature_verification_ed25519(l: u32, ) -> Weight;
	fn signature_verification_ecdsa(l: u32, ) -> Weight;
}

/// Weights for pallet_did using the CORD node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ed25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 65_000_000 picoseconds.
		Weight::from_parts(55_418_485, 5521)
			// Standard Error: 7_763
			.saturating_add(Weight::from_parts(674_728, 0).saturating_mul(n.into()))
			// Standard Error: 3_001
			.saturating_add(Weight::from_parts(4_118_886, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_sr25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 67_000_000 picoseconds.
		Weight::from_parts(56_685_109, 5521)
			// Standard Error: 8_127
			.saturating_add(Weight::from_parts(743_588, 0).saturating_mul(n.into()))
			// Standard Error: 3_142
			.saturating_add(Weight::from_parts(4_658_077, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ecdsa_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 64_000_000 picoseconds.
		Weight::from_parts(56_199_983, 5521)
			// Standard Error: 12_282
			.saturating_add(Weight::from_parts(693_728, 0).saturating_mul(n.into()))
			// Standard Error: 4_748
			.saturating_add(Weight::from_parts(3_879_430, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:25 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidBlacklist (r:0 w:1)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 25]`.
	fn delete(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `365 + c * (105 ±0)`
		//  Estimated: `5521 + c * (2888 ±0)`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(19_993_820, 5521)
			// Standard Error: 4_362
			.saturating_add(Weight::from_parts(1_288_353, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(3_u64))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 2888).saturating_mul(c.into()))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ed25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_sr25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ecdsa_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1358`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(16_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(1_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	fn add_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `838`
		//  Estimated: `5521`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(22_000_000, 5521)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn remove_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1066`
		//  Estimated: `3878`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(18_000_000, 3878)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_sr25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(21_115_676, 5521)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(3_667, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ed25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 44_000_000 picoseconds.
		Weight::from_parts(6_645_574, 5521)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_887, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ecdsa(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(23_538_035, 5521)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_029, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ed25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 65_000_000 picoseconds.
		Weight::from_parts(55_418_485, 5521)
			// Standard Error: 7_763
			.saturating_add(Weight::from_parts(674_728, 0).saturating_mul(n.into()))
			// Standard Error: 3_001
			.saturating_add(Weight::from_parts(4_118_886, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_sr25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 67_000_000 picoseconds.
		Weight::from_parts(56_685_109, 5521)
			// Standard Error: 8_127
			.saturating_add(Weight::from_parts(743_588, 0).saturating_mul(n.into()))
			// Standard Error: 3_142
			.saturating_add(Weight::from_parts(4_658_077, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ecdsa_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `5521`
		// Minimum execution time: 64_000_000 picoseconds.
		Weight::from_parts(56_199_983, 5521)
			// Standard Error: 12_282
			.saturating_add(Weight::from_parts(693_728, 0).saturating_mul(n.into()))
			// Standard Error: 4_748
			.saturating_add(Weight::from_parts(3_879_430, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:25 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidBlacklist (r:0 w:1)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 25]`.
	fn delete(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `365 + c * (105 ±0)`
		//  Estimated: `5521 + c * (2888 ±0)`
		// Minimum execution time: 20_000_000 picoseconds.
		Weight::from_parts(19_993_820, 5521)
			// Standard Error: 4_362
			.saturating_add(Weight::from_parts(1_288_353, 0).saturating_mul(c.into()))
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
			.saturating_add(RocksDbWeight::get().writes((1_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 2888).saturating_mul(c.into()))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ed25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_sr25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ecdsa_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234`
		//  Estimated: `5521`
		// Minimum execution time: 54_000_000 picoseconds.
		Weight::from_parts(55_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(19_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(18_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1358`
		//  Estimated: `5521`
		// Minimum execution time: 17_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(16_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 16_000_000 picoseconds.
		Weight::from_parts(17_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(1_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	fn add_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `838`
		//  Estimated: `5521`
		// Minimum execution time: 21_000_000 picoseconds.
		Weight::from_parts(22_000_000, 5521)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn remove_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1066`
		//  Estimated: `3878`
		// Minimum execution time: 18_000_000 picoseconds.
		Weight::from_parts(18_000_000, 3878)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_sr25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(21_115_676, 5521)
			// Standard Error: 1
			.saturating_add(Weight::from_parts(3_667, 0).saturating_mul(l.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ed25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 44_000_000 picoseconds.
		Weight::from_parts(6_645_574, 5521)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_887, 0).saturating_mul(l.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ecdsa(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 45_000_000 picoseconds.
		Weight::from_parts(23_538_035, 5521)
			// Standard Error: 0
			.saturating_add(Weight::from_parts(1_029, 0).saturating_mul(l.into()))
			.saturating_add(RocksDbWeight::get().reads(1_u64))
	}
}
