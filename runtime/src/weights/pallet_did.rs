// This file is part of CORD – https://cord.network

// Copyright (C) Dhiway Networks Pvt. Ltd.
// SPDX-License-Identifier: GPL-3.0-or-later

// CORD is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// CORD is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with CORD. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for `pallet_did`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-04-30, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ip-172-31-3-249`, CPU: `Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/cord
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_did
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --header=./HEADER-GPL3
// --output=./runtime/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_did`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_did::WeightInfo for WeightInfo<T> {
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ed25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `9034`
		// Minimum execution time: 97_261_000 picoseconds.
		Weight::from_parts(85_418_963, 0)
			.saturating_add(Weight::from_parts(0, 9034))
			// Standard Error: 21_444
			.saturating_add(Weight::from_parts(966_637, 0).saturating_mul(n.into()))
			// Standard Error: 8_291
			.saturating_add(Weight::from_parts(5_547_437, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_sr25519_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `9034`
		// Minimum execution time: 99_553_000 picoseconds.
		Weight::from_parts(87_605_841, 0)
			.saturating_add(Weight::from_parts(0, 9034))
			// Standard Error: 21_054
			.saturating_add(Weight::from_parts(983_571, 0).saturating_mul(n.into()))
			// Standard Error: 8_140
			.saturating_add(Weight::from_parts(6_237_881, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidBlacklist (r:1 w:0)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:0 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:0 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// The range of component `n` is `[1, 10]`.
	/// The range of component `c` is `[1, 25]`.
	fn create_ecdsa_keys(n: u32, c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `9034`
		// Minimum execution time: 87_102_000 picoseconds.
		Weight::from_parts(71_928_224, 0)
			.saturating_add(Weight::from_parts(0, 9034))
			// Standard Error: 20_599
			.saturating_add(Weight::from_parts(1_379_178, 0).saturating_mul(n.into()))
			// Standard Error: 7_964
			.saturating_add(Weight::from_parts(5_364_265, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
	}
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:25 w:25)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidBlacklist (r:0 w:1)
	/// Proof: Did DidBlacklist (max_values: None, max_size: Some(48), added: 2523, mode: MaxEncodedLen)
	/// The range of component `c` is `[1, 25]`.
	fn delete(c: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `365 + c * (105 ±0)`
		//  Estimated: `10028 + c * (2888 ±0)`
		// Minimum execution time: 26_542_000 picoseconds.
		Weight::from_parts(26_613_286, 0)
			.saturating_add(Weight::from_parts(0, 10028))
			// Standard Error: 5_747
			.saturating_add(Weight::from_parts(1_322_476, 0).saturating_mul(c.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(c.into())))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(c.into())))
			.saturating_add(Weight::from_parts(0, 2888).saturating_mul(c.into()))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ed25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 76_222_000 picoseconds.
		Weight::from_parts(78_148_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_sr25519_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `233`
		//  Estimated: `5521`
		// Minimum execution time: 77_744_000 picoseconds.
		Weight::from_parts(78_805_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn submit_did_call_ecdsa_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `234`
		//  Estimated: `5521`
		// Minimum execution time: 67_547_000 picoseconds.
		Weight::from_parts(69_055_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_689_000 picoseconds.
		Weight::from_parts(27_900_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_854_000 picoseconds.
		Weight::from_parts(28_054_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_authentication_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 26_958_000 picoseconds.
		Weight::from_parts(27_823_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_510_000 picoseconds.
		Weight::from_parts(27_647_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_442_000 picoseconds.
		Weight::from_parts(27_724_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 26_952_000 picoseconds.
		Weight::from_parts(27_409_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 24_655_000 picoseconds.
		Weight::from_parts(25_506_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 24_487_000 picoseconds.
		Weight::from_parts(25_023_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_delegation_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 24_492_000 picoseconds.
		Weight::from_parts(25_440_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_607_000 picoseconds.
		Weight::from_parts(27_161_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 26_649_000 picoseconds.
		Weight::from_parts(27_479_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn set_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 26_684_000 picoseconds.
		Weight::from_parts(27_685_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 24_335_000 picoseconds.
		Weight::from_parts(25_100_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 24_893_000 picoseconds.
		Weight::from_parts(25_835_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_assertion_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 24_686_000 picoseconds.
		Weight::from_parts(25_419_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 26_069_000 picoseconds.
		Weight::from_parts(26_840_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1355`
		//  Estimated: `5521`
		// Minimum execution time: 26_230_000 picoseconds.
		Weight::from_parts(26_847_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn add_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1358`
		//  Estimated: `5521`
		// Minimum execution time: 26_040_000 picoseconds.
		Weight::from_parts(26_775_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ed25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 24_732_000 picoseconds.
		Weight::from_parts(25_500_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_sr25519_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1457`
		//  Estimated: `5521`
		// Minimum execution time: 25_040_000 picoseconds.
		Weight::from_parts(25_707_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:1)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	fn remove_ecdsa_key_agreement_key() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 24_943_000 picoseconds.
		Weight::from_parts(25_650_000, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	fn add_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `838`
		//  Estimated: `12916`
		// Minimum execution time: 29_948_000 picoseconds.
		Weight::from_parts(31_831_000, 0)
			.saturating_add(Weight::from_parts(0, 12916))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Did ServiceEndpoints (r:1 w:1)
	/// Proof: Did ServiceEndpoints (max_values: None, max_size: Some(413), added: 2888, mode: MaxEncodedLen)
	/// Storage: Did DidEndpointsCount (r:1 w:1)
	/// Proof: Did DidEndpointsCount (max_values: None, max_size: Some(52), added: 2527, mode: MaxEncodedLen)
	fn remove_service_endpoint() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1066`
		//  Estimated: `7395`
		// Minimum execution time: 24_299_000 picoseconds.
		Weight::from_parts(25_755_000, 0)
			.saturating_add(Weight::from_parts(0, 7395))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_sr25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 66_168_000 picoseconds.
		Weight::from_parts(37_749_427, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			// Standard Error: 4
			.saturating_add(Weight::from_parts(4_329, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ed25519(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1459`
		//  Estimated: `5521`
		// Minimum execution time: 65_159_000 picoseconds.
		Weight::from_parts(28_631_886, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(2_034, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: Did Did (r:1 w:0)
	/// Proof: Did Did (max_values: None, max_size: Some(2056), added: 4531, mode: MaxEncodedLen)
	/// The range of component `l` is `[1, 5242880]`.
	fn signature_verification_ecdsa(l: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1460`
		//  Estimated: `5521`
		// Minimum execution time: 56_084_000 picoseconds.
		Weight::from_parts(30_107_535, 0)
			.saturating_add(Weight::from_parts(0, 5521))
			// Standard Error: 0
			.saturating_add(Weight::from_parts(976, 0).saturating_mul(l.into()))
			.saturating_add(T::DbWeight::get().reads(1))
	}
}
