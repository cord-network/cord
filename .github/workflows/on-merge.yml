# This is a basic workflow to help you get started with Actions

name: CI

# Control when the action will run. 
on:
  # Trigger the workflow on push event
  push:
    branches: [ develop, aura_experiment, chain-review ]

  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Skip based on commit message
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    # A map of envvironment variables available to all steps in the job
    env:
      IMAGE_REPOSITORY: ${{ github.event.repository.name }}
      IMAGE_TAG: ${{ github.sha }}
      DOCKER_SERVER: docker.io
      DOCKER_USER: dhiway

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Check-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Login to DockerHub
      - run: |
         docker login ${{ env.DOCKER_SERVER }} -u ${{ env.DOCKER_USER }} -p "${{ secrets.DOCKER_PASSWORD }}"

      # Push image to Registry
      - run: |
          docker build . --no-cache --file Dockerfile --tag ${{ env.IMAGE_REPOSITORY }}:latest

          docker tag ${{ env.IMAGE_REPOSITORY }}:latest ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker tag ${{ env.IMAGE_REPOSITORY }}:latest ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${GITHUB_REF##*/}

          docker push ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
          docker push ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${GITHUB_REF##*/}
