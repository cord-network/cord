name: ci
on:
  pull_request:
    paths-ignore:
      - "**.md"
      - "doc/**"

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

      - name: show active toolchain
        run: rustup show active-toolchain

      - name: rustfmt
        run: cargo fmt --all -- --check

  build:
    runs-on: ubuntu-latest
    needs: rustfmt
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: install dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev

      - name: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/
            target/
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-rust-

      - name: cargo build
        run: rustup target add wasm32-unknown-unknown && rustup component add rust-src && cargo build --locked
