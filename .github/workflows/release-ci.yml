name: release-ci

on:
  pull_request:
    branches:
      - develop
    paths-ignore:
      - 'doc/**'
      - '**.md'
  
  push:
    branches:
      - develop
    paths-ignore:
      - 'doc/**'
      - '**.md'

defaults:
  run:
    shell: bash

jobs:
  release:
    runs-on: ubuntu-22.04

    # Skip based on commit message
    if: "!contains(github.event.head_commit.message, '[ci skip]')"

    env:
      IMAGE_REPOSITORY: ${{ github.event.repository.name }}
      IMAGE_TAG: ${{ github.sha }}
      DOCKER_SERVER: docker.io
      DOCKER_USER: dhiway

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y protobuf-compiler libssl-dev
  
    - name: Show active toolchain
      run: rustup show active-toolchain

    - name: Setup Cargo cache
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-

    - name: Check in Release mode
      run: cargo check --locked --features=runtime-benchmarks --verbose --all-targets --color always

    - name: Test in Release mode
      run: cargo test --locked --features=runtime-benchmarks --verbose --all-targets --color always

    - name: Login to DockerHub
      run: |
        docker login ${{ env.DOCKER_SERVER }} -u ${{ env.DOCKER_USER }} -p "${{ secrets.DOCKER_PASSWORD }}"

    - name: Push image to Registry
      run: |
        docker build . --no-cache --file Dockerfile --tag ${{ env.IMAGE_REPOSITORY }}:dev-0.8.0

        docker tag ${{ env.IMAGE_REPOSITORY }}:dev-0.8.0 ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
        docker tag ${{ env.IMAGE_REPOSITORY }}:dev-0.8.0 ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${GITHUB_REF##*/}

        docker push ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }} && \
        docker push ${{ env.DOCKER_SERVER }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_REPOSITORY }}:${GITHUB_REF##*/}
